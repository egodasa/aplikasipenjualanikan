<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>